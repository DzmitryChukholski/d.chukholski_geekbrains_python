"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def check_me(my_num, a, b):
    if my_num == 0:
        return a, b
    if my_num % 2 == 0:
        a += 1
        return check_me(my_num // 10, a, b)
    else:
        b += 1
        return check_me(my_num // 10, a, b)


my_num = int(input('Введите число: '))
print(f'В выбраном числе {check_me(my_num, 0, 0)[0]} четных и {check_me(my_num, 0, 0)[1]} нечётных цифр')
