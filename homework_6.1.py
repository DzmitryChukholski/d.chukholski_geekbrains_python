"""1. Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
Атрибут реализовать как приватный.
В рамках метода реализовать переключение светофора в режимы: красный, желтый, зеленый.
Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый) — 2 секунды,
третьего (зеленый) — на ваше усмотрение.
Переключение между режимами должно осуществляться только в указанном порядке (красный, желтый, зеленый).
Проверить работу примера, создав экземпляр и вызвав описанный метод.
Задачу можно усложнить, реализовав проверку порядка режимов,
и при его нарушении выводить соответствующее сообщение и завершать скрипт."""

# очень расплывчитая постановка задачи которую можно трактовать в множество способов
# отображение таймера добавлено для удобства, чтобы видеть сколько времени осталось до переключения
# поскольку не сказано что атрибут должен быть строкой с названием цвета я решил сделать такую реализацию

from itertools import cycle
import time
# можно ли импорты помещать внутрь метода класса?
# а то получается если их не импортировать, то весь класс не работает


class TrafficLight:
    color = {'red': 5, 'yellow': 5, 'green': 5}

    def __init__(self, timeRED, timeYELLOW, timeGREEN):
        self.color['red'] = timeRED
        self.color['yellow'] = timeYELLOW
        self.color['green'] = timeGREEN

    def running(self):
        for key, value in cycle(TrafficLight.color.items()):
            print(key, end=' ')
            for i in range(value, 0, -1):
                print(i, end=' ')
                time.sleep(1)
            print()


light = TrafficLight(7, 2, 15)
light.running()
