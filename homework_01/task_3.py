"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

das_ist_dict = {'Яблочко': 999999, 'Груша': 400000, 'Тракторный завод': -1004, 'ИП Игорь Аркадьевич': 4,
                'ООО Синий столб': 68, 'Бабушка на рынке': 312, 'ГазНефтьМеталлПроституткиАлюминийГрупп': 999998}

#Первый вариант - сложность O(N*2)
val_1_list = []
for value in das_ist_dict.values():
    val_1_list.append(value)
val_1_list.sort()
print('Топ три крутецких компаний:')
for i in range(0, 3):
    temp_val = val_1_list.pop()
    for key, value in das_ist_dict.items():
        if value == temp_val:
            print(key, value)
print('__________________________')

#Второй вариант - сложность O(N)
val_2_dict = {}
for key, value in das_ist_dict.items():
    val_2_dict[value] = key
val_2_list = sorted(val_2_dict, reverse=True)
print('Топ три крутецких компаний:')
for i in range(0, 3):
    print(val_2_dict[val_2_list[i]], val_2_list[i])
print('__________________________')


#Третий вариант - сложность O(1)
class company:
    name = str
    money = int

    def __init__(self, name, money):
        self.name = name
        self.money = money

    def __lt__(self, other):
        return self.money < other.money

    def __str__(self):
        return self.name + ' ' + str(self.money)


jabloczko = company(name='Яблочко', money=999999)
grusza = company(name='Груша', money=400000)
traktor = company(name='Тракторный завод', money=-1004)
ip = company(name='ИП Игорь Аркадьевич', money=4)
ooo = company(name='ООО Синий столб', money=68)
babuszka = company(name='Бабушка на рынке', money=312)
sluts = company(name='ГазНефтьМеталлПроституткиАлюминийГрупп', money=999998)

val_3_list = [jabloczko, grusza, traktor, ip, ooo, babuszka, sluts]
val_3_list.sort(reverse=True)
print('Топ три крутецких компаний:')
for i in range(0, 3):
    print(val_3_list[i])

"""Самый эффективный вариант номер 3, поскольку он позволяет не перебирать и как-то выкручивать списки и словари,
а просто отсортировать список и вывести первые три элемента"""